@mixin make-container(){
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@mixin make-container-max-widths(){
  @each $key,$val in $grid-breakpoints {
    //@debug $key,$val;
    @if $key != xs{
      @media (min-width:$val){
        max-width: $val;
      }
    }
  }
}

@mixin make-row(){
  display: flex;
  flex-wrap: wrap;
  margin:0 auto;
}

@mixin make-col($size){
  $percent:percentage($size / $grid-columns);
  flex:0 0 $percent;
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width:$percent;
}

@mixin media-breakpoint-up($val){
  $min:if($val!=0,$val,null);
  @if $min{
    @media (min-width:$min){
      @content;
    }
  } @else {
    @content;
  }
}

@mixin make-grid-columns(){
  %grid-column{
    position:relative;
    width:100%;
    min-height:1px;
  }

  @each $key,$val in $grid-breakpoints{
    $infix:if($key!=xs,'-#{$key}','');
    //@debug $infix;

    @for $i from 1 through $grid-columns{
      .col#{$infix}-#{$i}{
        @extend %grid-column;
      }
    }

    .col#{$infix},
    .col#{$infix}-auto{
      @extend %grid-column;
    }

    @include media-breakpoint-up($val){
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none; // Reset earlier grid tiers
      }

      @for $i from 1 through $grid-columns{
        .col#{$infix}-#{$i}{
          @include make-col($i);
        }
      }
    }
  }
}

